#1.9系でもcurrent path を引き継ぐ
bind '"' split-window -vc "#{pane_current_path}"
bind '%' split-window -hc "#{pane_current_path}"
bind 'c' new-window -c "#{pane_current_path}"

#デフォルトシェルをbashに
#set-option -g default-shell /bin/bash
#set-option -g default-command /bin/bash

#デフォルトシェルをzshに
set-option -g default-shell /usr/local/bin/zsh
set-option -g default-command /usr/local/bin/zsh

# Vimでヤンク・コピー出来るようにする
#set-option -g default-command "reattach-to-user-namespace -l bash"
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Powerline
run-shell "powerline-daemon --replace --foreground & { sleep 2 ; tmux refresh -S ; powerline-daemon --replace }"
source '~/Library/Python/2.7/lib/python/site-packages/powerline/bindings/tmux/powerline.conf'

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

bind-key [ copy-mode \; display "(Copy mode)"
bind-key Escape copy-mode \; display "(Copy mode)"

# vでマーク開始
bind-key -T copy-mode-vi v send-keys -X begin-selection
# yでヤンク
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
